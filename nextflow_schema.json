{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/circrna/master/nextflow_schema.json",
    "title": "nf-core/circrna pipeline parameters",
    "description": "circRNA quantification, differential expression analysis and miRNA target prediction of RNA-Seq data",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data, sample metadata and save output data.",
            "required": [
                "input",
                "input_type"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Path to directory containing FASTQ/BAM files or a CSV file containing the path or URL to FASTQ/BAM files.",
                    "help_text": "There are two ways to supply data to `nf-core/circrna`:\n\n 1. Provide the path to the directory containing either FASTQ/BAM files. The path must contain a wildcard glob ('*') and the string must be enclosed by single or double quotes (e.g for paired end data: `--input '/<path to fastq>/*_R{1,2}.fq.gz'`).\n 2. Provide a CSV file containing the paths or URLs to FASTQ/BAM files. The CSV must contain the following headers: `Sample_ID`, `Read1`, `Read2`, `BAM`. If you are using FASTQ files, set the BAM column to `NA`. Similarly, if you are using BAM files, set the `Read1`, `Read2` columns to `NA`."
                },
                "input_type": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Input data type, `fastq` or `bam`."
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                }
            },
            "help_text": "This text appears when user clicks help beside the title - Input/output options"
        },
        "pipeline_options": {
          "title": "Pipeline Options",
          "type": "object",
          "fa-icon": "fas fa-cog",
          "description": "Options for [nf-core/circrna] deployment",
          "required": [
            "module",
            "tool"
          ],
          "properties":{
            "tool":{
              "type":"string",
              "fa_icon": "fas fa-sliders",
              "description": "Comma separated list of circRNA quantification tools to use. The user can select one or a combination of tools. Supported tools: `CIRIquant`, `CIRCexplorer2`, `find_circ`, `circRNA_finder`, `MapSplice`, `DCC`."
            },
            "module": {
              "type": "string",
              "fa_icon": "fas fa-sliders",
              "description": "Comma separated list of modules to run: `'circrna_discovery'` (mandatory), '`mirna_prediction`' & `'differential_expression'`."
            }
          },
          "help_text": "This text appears when user click help beside Pipeline Options"
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for the reference genome indices used to align reads.",
            "properties": {
                "fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-font",
                    "description": "Path to gencode FASTA genome file.",
                    "help_text": "[nf-core/circrna] has been developed using gencode reference FASTA files, users can provide alternative reference FASTA files (UCSC, ENSEMBL) at their own risk.\n\n When running the pipeline for the first time, the user can leave `--fasta` empty and specify the genome version to use."
                },
                "genome_version": {
                    "type": "string",
                    "fa_icon": "fas fa-clone",
                    "description": "Genome version to use, options: `GRCh37`, `GRCh38`."
                },
                "igenomes_base": {
                    "type": "string",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes/",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "fasta_fai": {
                    "type": "string",
                    "fa_icon" : "fas fa-address-book",
                    "description": "Path to samtools genome index file (`.fai`).",
                    "help_text": "Automatically generated if none supplied. If re-running the pipeline provide the FASTA `.fai` file to save compute resources."
                },
                "bowtie_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Path to bowtie index files. Path must be enclosed with quotes and use a wildcard glob ('*') pattern.",
                    "help_text": "Automatically generated if none supplied. If re-running the pipeline provide the path to bowtie indices to save compute resources e.g `--bowtie_index '/<path>/<bowtie_index>/*'`.\n\n Quantification tool dependency: `mapsplice`."
                },
                "bowtie2_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Path to bowtie2 index files. Path must be enclosed with quotes and use a wildcard glob ('*') pattern.",
                    "help_text": "Automatically generated if none supplied. If re-running the pipeline provide the path to bowtie indices to save compute resources e.g `--bowtie2_index '/<path>/<bowtie2_index>/*'`.\n\n Quantification tool dependency: `find_circ`."
                },
                "bwa_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Path to bwa index files.",
                    "help_text": "Automatically generated if none supplied. If re-running the pipeline provide the path to bwa indices to save compute resources e.g `--bwa_index '/<path>/<bwa_index>/'`.\n\n Quantification tool dependency: `CIRIquant`."

                },
                "hisat2_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Path to Hisat 2 index files.",
                    "help_text": "Automatically generated if none supplied. If re-running the pipeline provide the path to hisat2 indices to save compute resources e.g `--hisat2_index '/<path>/<hisat2_index>/'`.\n\n Quantification tool dependency: `CIRIquant`."

                },
                "star_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Path to STAR index files.",
                    "help_text": "Automatically generated if none supplied. If re-running the pipeline provide the path to STAR indices to save compute resources e.g `--star_index '/<path>/<star_index>/'`.\n\n Quantification tool dependency: `CIRCexplorer2, circRNA_finder, DCC`."
                }
            },
            "help_text": "displayed whe user clicks help beside reference genome options."
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "name": {
                    "type": "string",
                    "description": "Workflow name.",
                    "fa_icon": "fas fa-fingerprint",
                    "hidden": true,
                    "help_text": "A custom name for the pipeline run. Unlike the core nextflow `-name` option with one hyphen this parameter can be reused multiple times, for example if using `-resume`. Passed through to steps such as MultiQC and used for things like report filenames and titles."
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "An email address to send a summary email to when the pipeline is completed.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true,
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/pipeline_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ],
    "properties": {
        "gencode_gtf": {
            "type": "string"
        },
        "gene_annotation": {
            "type": "string"
        },
        "fasta_chr": {
            "type": "string"
        },
        "ciriquant_yml": {
            "type": "string"
        },
        "adapters": {
            "type": "string"
        },
        "phenotype": {
            "type": "string"
        },
        "trimming": {
            "type": "string"
        },
        "minlen": {
            "type": "integer"
        },
        "ktrim": {
            "type": "string"
        },
        "k": {
            "type": "string"
        },
        "qtrim": {
          "type": "string"
        },
        "trimq": {
          "type": "integer"
        },
        "threads": {
          "type": "integer"
        }
    }
}
